"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const elasticsearch_beats_adapter_1 = require("../adapters/beats/elasticsearch_beats_adapter");
const kibana_database_adapter_1 = require("../adapters/database/kibana_database_adapter");
const elasticsearch_tags_adapter_1 = require("../adapters/tags/elasticsearch_tags_adapter");
const elasticsearch_tokens_adapter_1 = require("../adapters/tokens/elasticsearch_tokens_adapter");
const kibana_framework_adapter_1 = require("../adapters/framework/kibana_framework_adapter");
const framework_1 = require("./../framework");
const beats_1 = require("../beats");
const tags_1 = require("../tags");
const tokens_1 = require("../tokens");
const constants_1 = require("x-pack/plugins/beats_management/common/constants");
const plugin_1 = require("x-pack/plugins/beats_management/common/constants/plugin");
function compose(server) {
    const framework = new framework_1.BackendFrameworkLib(new kibana_framework_adapter_1.KibanaBackendFrameworkAdapter(constants_1.PLUGIN.ID, server, plugin_1.CONFIG_PREFIX));
    const database = new kibana_database_adapter_1.KibanaDatabaseAdapter(server.plugins.elasticsearch);
    const tags = new tags_1.CMTagsDomain(new elasticsearch_tags_adapter_1.ElasticsearchTagsAdapter(database));
    const tokens = new tokens_1.CMTokensDomain(new elasticsearch_tokens_adapter_1.ElasticsearchTokensAdapter(database), {
        framework,
    });
    const beats = new beats_1.CMBeatsDomain(new elasticsearch_beats_adapter_1.ElasticsearchBeatsAdapter(database), {
        tags,
        tokens,
        framework,
    });
    const libs = {
        framework,
        database,
        beats,
        tags,
        tokens,
    };
    return libs;
}
exports.compose = compose;
