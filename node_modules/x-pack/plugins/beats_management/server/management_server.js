"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const configuration_1 = require("./rest_api/beats/configuration");
const enroll_1 = require("./rest_api/beats/enroll");
const get_1 = require("./rest_api/beats/get");
const list_1 = require("./rest_api/beats/list");
const tag_assignment_1 = require("./rest_api/beats/tag_assignment");
const tag_removal_1 = require("./rest_api/beats/tag_removal");
const update_1 = require("./rest_api/beats/update");
const delete_1 = require("./rest_api/tags/delete");
const get_2 = require("./rest_api/tags/get");
const list_2 = require("./rest_api/tags/list");
const set_1 = require("./rest_api/tags/set");
const create_1 = require("./rest_api/tokens/create");
exports.initManagementServer = (libs) => {
    libs.framework.registerRoute(get_1.createGetBeatRoute(libs));
    libs.framework.registerRoute(get_2.createGetTagsWithIdsRoute(libs));
    libs.framework.registerRoute(list_2.createListTagsRoute(libs));
    libs.framework.registerRoute(delete_1.createDeleteTagsWithIdsRoute(libs));
    libs.framework.registerRoute(configuration_1.createGetBeatConfigurationRoute(libs));
    libs.framework.registerRoute(tag_assignment_1.createTagAssignmentsRoute(libs));
    libs.framework.registerRoute(list_1.createListAgentsRoute(libs));
    libs.framework.registerRoute(tag_removal_1.createTagRemovalsRoute(libs));
    libs.framework.registerRoute(enroll_1.createBeatEnrollmentRoute(libs));
    libs.framework.registerRoute(set_1.createSetTagRoute(libs));
    libs.framework.registerRoute(create_1.createTokensRoute(libs));
    libs.framework.registerRoute(update_1.createBeatUpdateRoute(libs));
};
