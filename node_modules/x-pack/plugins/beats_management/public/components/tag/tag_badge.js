"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const constants_1 = require("../../../common/constants");
const disabled_tag_badge_1 = require("./disabled_tag_badge");
exports.TagBadge = (props) => {
    const { iconType, onClick, onClickAriaLabel, tag: { color, disabled, id }, } = props;
    const maxIdRenderSize = props.maxIdRenderSize || constants_1.TABLE_CONFIG.TRUNCATE_TAG_LENGTH;
    const idToRender = id.length > maxIdRenderSize ? `${id.substring(0, maxIdRenderSize)}...` : id;
    return disabled ? (react_1.default.createElement(disabled_tag_badge_1.DisabledTagBadge, { maxIdRenderSize: props.maxIdRenderSize, id: id })) : (react_1.default.createElement(eui_1.EuiBadge, { color: color || 'primary', iconType: iconType, onClick: onClick, onClickAriaLabel: onClickAriaLabel }, idToRender));
};
