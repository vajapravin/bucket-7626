"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const eui_1 = require("@elastic/eui");
const annotation_description_list_1 = require("../annotation_description_list");
exports.AnnotationFlyout = ({ annotation, cancelAction, controlFunc, deleteAction, saveAction, }) => {
    const saveActionWrapper = () => saveAction(annotation);
    const deleteActionWrapper = () => deleteAction(annotation);
    const isExistingAnnotation = typeof annotation._id !== 'undefined';
    const titlePrefix = isExistingAnnotation ? 'Edit' : 'Add';
    return (react_1.default.createElement(eui_1.EuiFlyout, { onClose: cancelAction, size: "s", "aria-labelledby": "Add annotation" },
        react_1.default.createElement(eui_1.EuiFlyoutHeader, { hasBorder: true },
            react_1.default.createElement(eui_1.EuiTitle, { size: "s" },
                react_1.default.createElement("h2", { id: "mlAnnotationFlyoutTitle" },
                    titlePrefix,
                    " annotation"))),
        react_1.default.createElement(eui_1.EuiFlyoutBody, null,
            react_1.default.createElement(annotation_description_list_1.AnnotationDescriptionList, { annotation: annotation }),
            react_1.default.createElement(eui_1.EuiSpacer, { size: "m" }),
            react_1.default.createElement(eui_1.EuiFormRow, { label: "Annotation text", fullWidth: true },
                react_1.default.createElement(eui_1.EuiTextArea, { fullWidth: true, isInvalid: annotation.annotation === '', onChange: controlFunc, placeholder: "...", value: annotation.annotation }))),
        react_1.default.createElement(eui_1.EuiFlyoutFooter, null,
            react_1.default.createElement(eui_1.EuiFlexGroup, { justifyContent: "spaceBetween" },
                react_1.default.createElement(eui_1.EuiFlexItem, { grow: false },
                    react_1.default.createElement(eui_1.EuiButtonEmpty, { iconType: "cross", onClick: cancelAction, flush: "left" }, "Cancel")),
                react_1.default.createElement(eui_1.EuiFlexItem, { grow: false }, isExistingAnnotation && (react_1.default.createElement(eui_1.EuiButtonEmpty, { color: "danger", onClick: deleteActionWrapper }, "Delete"))),
                react_1.default.createElement(eui_1.EuiFlexItem, { grow: false },
                    react_1.default.createElement(eui_1.EuiButton, { fill: true, isDisabled: annotation.annotation === '', onClick: saveActionWrapper }, isExistingAnnotation ? 'Update' : 'Create'))))));
};
