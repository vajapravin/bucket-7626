'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeatImage = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.
                                                                                                                                                                                                                                                                   */

var _resolve_dataurl = require('../../../common/lib/resolve_dataurl');

var _elastic_outline = require('../../lib/elastic_outline');

var repeatImage = exports.repeatImage = function repeatImage() {
  return {
    name: 'repeatImage',
    aliases: [],
    type: 'render',
    help: 'Configure a repeating image element',
    context: {
      types: ['number']
    },
    args: {
      image: {
        types: ['string', 'null'],
        help: 'The image to repeat. Usually a dataURL or an asset',
        default: _elastic_outline.elasticOutline
      },
      size: {
        types: ['number'],
        default: 100,
        help: 'The maximum height or width of the image, in pixels. Eg, if you images is taller than it is wide, this will limit its height'
      },
      max: {
        types: ['number', 'null'],
        help: 'Maximum number of times the image may repeat',
        default: 1000
      },
      emptyImage: {
        types: ['string', 'null'],
        help: 'Fill the difference between the input and the `max=` parameter with this image',
        default: null
      }
    },
    fn: function fn(count, args) {
      return {
        type: 'render',
        as: 'repeatImage',
        value: _extends({
          count: Math.floor(count)
        }, args, {
          image: (0, _resolve_dataurl.resolveWithMissingImage)(args.image, _elastic_outline.elasticOutline),
          emptyImage: (0, _resolve_dataurl.resolveWithMissingImage)(args.emptyImage)
        })
      };
    }
  };
};