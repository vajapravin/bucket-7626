'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sort = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.
                                                                                                                                                                                                                                                                   */

var _lodash = require('lodash');

var sort = exports.sort = function sort() {
  return {
    name: 'sort',
    type: 'datatable',
    help: 'Sorts a datatable on a column',
    context: {
      types: ['datatable']
    },
    args: {
      by: {
        types: ['string'],
        aliases: ['_', 'column'],
        multi: false, // TODO: No reason you couldn't.
        help: 'The column to sort on. If column is not specified, the datatable will be sorted on the first column.'
      },
      reverse: {
        types: ['boolean'],
        help: 'Reverse the sort order. If reverse is not specified, the datatable will be sorted in ascending order.',
        options: [true, false]
      }
    },
    fn: function fn(context, args) {
      var column = args.by || context.columns[0].name;

      return _extends({}, context, {
        rows: args.reverse ? (0, _lodash.sortBy)(context.rows, column).reverse() : (0, _lodash.sortBy)(context.rows, column)
      });
    }
  };
};