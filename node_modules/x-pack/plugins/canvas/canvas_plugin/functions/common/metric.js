'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.metric = undefined;

var _fonts = require('../../../common/lib/fonts');

var metric = exports.metric = function metric() {
  return {
    name: 'metric',
    aliases: [],
    type: 'render',
    help: 'A number with a label',
    context: {
      types: ['string', 'null']
    },
    args: {
      label: {
        types: ['string'],
        aliases: ['_', 'text', 'description'],
        help: 'Text describing the metric',
        default: '""'
      },
      metricFont: {
        types: ['style'],
        help: 'Font settings for the metric. Technically you can stick other styles in here too!',
        default: '{font size=48 family="' + _fonts.openSans.value + '" color="#000000" align=center lHeight=48}'
      },
      labelFont: {
        types: ['style'],
        help: 'Font settings for the label. Technically you can stick other styles in here too!',
        default: '{font size=14 family="' + _fonts.openSans.value + '" color="#000000" align=center}'
      }
    },
    fn: function fn(context, _ref) {
      var label = _ref.label,
          metricFont = _ref.metricFont,
          labelFont = _ref.labelFont;

      return {
        type: 'render',
        as: 'metric',
        value: {
          metric: context === null ? '?' : context,
          label: label,
          metricFont: metricFont,
          labelFont: labelFont
        }
      };
    }
  };
}; /*
    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
    * or more contributor license agreements. Licensed under the Elastic License;
    * you may not use this file except in compliance with the Elastic License.
    */