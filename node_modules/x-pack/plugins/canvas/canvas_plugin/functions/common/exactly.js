'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */

var exactly = exports.exactly = function exactly() {
  return {
    name: 'exactly',
    aliases: [],
    type: 'filter',
    context: {
      types: ['filter']
    },
    help: 'Create a filter that matches a given column for a perfectly exact value',
    args: {
      column: {
        types: ['string'],
        aliases: ['field', 'c'],
        help: 'The column or field to attach the filter to'
      },
      value: {
        types: ['string'],
        aliases: ['v', 'val'],
        help: 'The value to match exactly, including white space and capitalization'
      }
    },
    fn: function fn(context, args) {
      var value = args.value,
          column = args.column;


      var filter = {
        type: 'exactly',
        value: value,
        column: column
      };

      return _extends({}, context, { and: [].concat(_toConsumableArray(context.and), [filter]) });
    }
  };
};