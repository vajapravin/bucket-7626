'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFontSpec = exports.defaultSpec = undefined;

var _fonts = require('../../../../common/lib/fonts');

// converts the output of the font function to a flot font spec
// for font spec, see https://github.com/flot/flot/blob/master/API.md#customizing-the-axes
var defaultSpec = exports.defaultSpec = {
  size: 14,
  lHeight: 21,
  style: 'normal',
  weight: 'normal',
  family: _fonts.openSans.value,
  color: '#000'
}; /*
    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
    * or more contributor license agreements. Licensed under the Elastic License;
    * you may not use this file except in compliance with the Elastic License.
    */

var getFontSpec = exports.getFontSpec = function getFontSpec(argFont) {
  if (!argFont || !argFont.spec) {
    return defaultSpec;
  }

  var _argFont$spec = argFont.spec,
      fontSize = _argFont$spec.fontSize,
      lineHeight = _argFont$spec.lineHeight,
      fontStyle = _argFont$spec.fontStyle,
      fontWeight = _argFont$spec.fontWeight,
      fontFamily = _argFont$spec.fontFamily,
      color = _argFont$spec.color;

  var size = fontSize && Number(fontSize.replace('px', ''));
  var lHeight = typeof lineHeight === 'string' && Number(lineHeight.replace('px', ''));

  return {
    size: !isNaN(size) ? size : defaultSpec.size,
    lHeight: !isNaN(size) ? lHeight : defaultSpec.lHeight,
    style: fontStyle || defaultSpec.style,
    weight: fontWeight || defaultSpec.weight,
    family: fontFamily || defaultSpec.family,
    color: color || defaultSpec.color
  };
};