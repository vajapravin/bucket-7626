'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.essql = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.
                                                                                                                                                                                                                                                                   */

var _query_es_sql = require('../../../../server/lib/query_es_sql');

var essql = exports.essql = function essql() {
  return {
    name: 'essql',
    type: 'datatable',
    context: {
      types: ['filter']
    },
    help: 'Elasticsearch SQL',
    args: {
      query: {
        aliases: ['_', 'q'],
        types: ['string'],
        help: 'SQL query'
      },
      count: {
        types: ['number'],
        default: 1000
      }
    },
    fn: function fn(context, args, handlers) {
      return (0, _query_es_sql.queryEsSQL)(handlers.elasticsearchClient, _extends({}, args, { filter: context.and }));
    }
  };
};