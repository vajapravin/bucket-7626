"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const styled_components_1 = tslib_1.__importDefault(require("styled-components"));
const time_1 = require("../../../../common/time");
const item_date_field_1 = require("./item_date_field");
const item_message_field_1 = require("./item_message_field");
class LogTextStreamLogEntryItemView extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.state = {
            isHovered: false,
        };
        this.handleMouseEnter = () => {
            this.setState({
                isHovered: true,
            });
        };
        this.handleMouseLeave = () => {
            this.setState({
                isHovered: false,
            });
        };
    }
    render() {
        const { boundingBoxRef, logEntry, scale, searchResult, wrap } = this.props;
        const { isHovered } = this.state;
        return (React.createElement(LogTextStreamLogEntryItemDiv, { innerRef: 
            /* Workaround for missing RefObject support in styled-components */
            boundingBoxRef, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave },
            React.createElement(item_date_field_1.LogTextStreamItemDateField, { hasHighlights: !!searchResult, isHovered: isHovered, scale: scale }, time_1.formatTime(logEntry.fields.time)),
            React.createElement(item_message_field_1.LogTextStreamItemMessageField, { highlights: searchResult ? searchResult.matches.message || [] : [], isHovered: isHovered, isWrapped: wrap, scale: scale }, logEntry.fields.message)));
    }
}
exports.LogTextStreamLogEntryItemView = LogTextStreamLogEntryItemView;
const LogTextStreamLogEntryItemDiv = styled_components_1.default.div `
  font-family: ${props => props.theme.eui.euiCodeFontFamily};
  font-size: ${props => props.theme.eui.euiFontSize};
  line-height: ${props => props.theme.eui.euiLineHeight};
  color: ${props => props.theme.eui.euiTextColor};
  overflow: hidden;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;
`;
